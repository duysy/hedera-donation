/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC721Token,
  ERC721TokenInterface,
} from "../../../../contracts/tokens/ERC721.sol/ERC721Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newTokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    name: "setURIPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620004bc5762002461803803806200001d81620004c1565b9283398101606082820312620004bc5781516001600160401b039190828111620004bc57816200004f918501620004e7565b9060209384810151848111620004bc57826200006d918301620004e7565b916040820151858111620004bc57620000879201620004e7565b825191848311620004a6576000908154936001958686811c961680156200049b575b89871014620003a5578190601f9687811162000448575b508990878311600114620003e4578592620003d8575b5050600019600383901b1c191690861b1782555b805190868211620003c45785548681811c91168015620003b9575b89821014620003a55790818684931162000352575b508890868311600114620002ee578492620002e2575b5050600019600383901b1c191690851b1784555b600b8054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a38151948511620002ce57600c548481811c91168015620002c3575b87821014620002af5783811162000266575b5085928511600114620001fd579394508492919083620001f1575b50501b916000199060031b1c191617600c555b604051611f0790816200055a8239f35b015192503880620001ce565b600c815285812093958591601f198316915b888383106200024b575050501062000231575b505050811b01600c55620001e1565b015160001960f88460031b161c1916905538808062000222565b8587015188559096019594850194879350908101906200020f565b600c82528682208480880160051c820192898910620002a5575b0160051c019085905b82811062000299575050620001b3565b83815501859062000289565b9250819262000280565b634e487b7160e01b82526022600452602482fd5b90607f1690620001a1565b634e487b7160e01b81526041600452602490fd5b01519050388062000130565b8785528985208894509190601f198416865b8c8282106200033b575050841162000321575b505050811b01845562000144565b015160001960f88460031b161c1916905538808062000313565b8385015186558b9790950194938401930162000300565b9091508684528884208680850160051c8201928b86106200039b575b918991869594930160051c01915b8281106200038c5750506200011a565b8681558594508991016200037c565b925081926200036e565b634e487b7160e01b84526022600452602484fd5b90607f169062000105565b634e487b7160e01b83526041600452602483fd5b015190503880620000d6565b8580528a86208994509190601f198416875b8d82821062000431575050841162000417575b505050811b018255620000ea565b015160001960f88460031b161c1916905538808062000409565b8385015186558c97909501949384019301620003f6565b9091508480528985208780850160051c8201928c861062000491575b918a91869594930160051c01915b82811062000482575050620000c0565b8781558594508a910162000472565b9250819262000464565b95607f1695620000a9565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620004a657604052565b919080601f84011215620004bc5782516001600160401b038111620004a6576020906200051d601f8201601f19168301620004c1565b92818452828287010111620004bc5760005b8181106200054557508260009394955001015290565b85810183015184820184015282016200052f56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610e305750806306fdde0314610d88578063081812fc14610d68578063095ea7b314610bfb578063162094c414610bc057806318160ddd14610ba157806323b872dd14610b7c5780632f745c5914610b5357806342842e0e14610b1f57806342966c6814610af85780634f6ccce714610a655780636352211e14610a345780636bff2c24146108a45780636c0360eb1461088657806370a0823114610859578063715018a6146107fc5780638462151c146106fe5780638da5cb5b146106d557806395d89b41146105f2578063a22cb46514610523578063b88d4fde1461049a578063c87b56dd1461045f578063d0def52114610256578063e985e9c5146102045763f2fde38b1461013657600080fd5b346102005760203660031901126102005761014f610f18565b90610158611043565b6001600160a01b039182169283156101ae575050600b54826bffffffffffffffffffffffff60a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461025257806003193601126102525760ff81602093610224610f18565b61022c610f33565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b50919034610252578060031936011261025257610271610f18565b9160243567ffffffffffffffff8111610252576102919036908601610ff0565b9061029a611043565b60095493600185019485811161044c578451926102b684610f49565b8084526001600160a01b038316918215610409576000888152600260205260409020546102ef906001600160a01b031615155b15611e1b565b878252602098600a8a528188842055600160401b8210156103f657506103ea93886103e5946103f09897948a60088e61034986610330819a826009556118d4565b90919082549060031b91821b91600019901b1916179055565b856103538861109b565b86865260078352848620818752835293852055858452528b822055600083815260026020526040902054610391906001600160a01b031615156102e9565b81815260038d528a81208054600101905582815260028d528a812080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a461169f565b61136c565b83611c2c565b51908152f35b634e487b7160e01b835260419052602482fd5b865162461bcd60e51b81526020818b0181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b634e487b7160e01b835260118752602483fd5b50913461049757602036600319011261049757506104806104939235611921565b9051918291602083526020830190610ef3565b0390f35b80fd5b838234610252576080366003190112610252576104b5610f18565b906104be610f33565b916044356064359367ffffffffffffffff851161051f573660238601121561051f576104f96103e59486602461051c98369301359101610fb9565b9261050c6105078433611390565b6112b7565b610517838383611458565b6117bb565b80f35b8580fd5b50903461020057806003193601126102005761053d610f18565b90602435918215158093036105ee576001600160a01b0316923384146105ac5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b50503461025257816003193601126102525780519082600180549161061683611181565b808652928281169081156106ad5750600114610651575b50505061063f82610493940383610f7b565b51918291602083526020830190610ef3565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8286106106955750505061063f826020610493958201019461062d565b80546020878701810191909152909501948101610678565b61049397508693506020925061063f94915060ff191682840152151560051b8201019461062d565b505034610252578160031936011261025257600b5490516001600160a01b039091168152602090f35b508290346102525760208060031936011261020057929161071d610f18565b916107278361109b565b61073081611eb9565b9161073d86519384610f7b565b81835261074982611eb9565b8388019590601f1901368737845b83811061079d575050505083519485948186019282875251809352850193925b82811061078657505050500390f35b835185528695509381019392810192600101610777565b6107ad81839a979698999a611846565b87518210156107e957868260051b8901015260001981146107d657600101979695939497610757565b634e487b7160e01b855260118352602485fd5b634e487b7160e01b865260328452602486fd5b8334610497578060031936011261049757610815611043565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102525760203660031901126102525760209061087f61087a610f18565b61109b565b9051908152f35b505034610252578160031936011261025257610493906104806111bb565b508234610497576020806003193601126102525767ffffffffffffffff908335828111610a30576108d89036908601610ff0565b936108e1611043565b8451928311610a1d57506108f6600c54611181565b601f81116109bb575b5080601f831160011461093a5750829382939261092f575b50508160011b916000199060031b1c191617600c5580f35b015190508380610917565b600c8452601f198316947fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7929185905b8782106109a357505083600195961061098a575b505050811b01600c5580f35b015160001960f88460031b161c1916905583808061097e565b8060018596829496860151815501950193019061096a565b600c84527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7601f840160051c810191838510610a13575b601f0160051c01905b818110610a0857506108ff565b8481556001016109fb565b90915081906109f2565b634e487b7160e01b845260419052602483fd5b8380fd5b5091346104975760203660031901126104975750610a546020923561115e565b90516001600160a01b039091168152f35b5082346104975760203660031901126104975750803590600954821015610aa057602083610a92846118d4565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b508234610497576020366003190112610497575035610b1a6105078233611390565b611e67565b505034610252576103e561051c91610b363661100e565b91925192610b4384610f49565b86845261050c6105078433611390565b50503461025257806003193601126102525760209061087f610b73610f18565b60243590611846565b83346104975761051c610b8e3661100e565b91610b9c6105078433611390565b611458565b5050346102525781600319360112610252576020906009549051908152f35b50903461020057366003190112610252576024359067ffffffffffffffff821161020057610bf461051c9236908301610ff0565b9035611c2c565b5034610200578160031936011261020057610c14610f18565b6024359290916001600160a01b0391908280610c2f8761115e565b16941693808514610d1b57803314908115610cfc575b5015610c9457848652602052842080546001600160a01b03191683179055610c6c8361115e565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541638610c45565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346104975760203660031901126104975750610a5460209235611279565b505034610252578160031936011261025257805190828054610da981611181565b808552916001918083169081156106ad5750600114610dd45750505061063f82610493940383610f7b565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610e185750505061063f826020610493958201019461062d565b80546020878701810191909152909501948101610dfb565b92505034610200576020366003190112610200573563ffffffff60e01b8116809103610200576020925063780e9d6360e01b8114908115610e73575b5015158152f35b632483248360e11b811491508115610e8d575b5038610e6c565b6380ac58cd60e01b811491508115610ebf575b8115610eae575b5038610e86565b6301ffc9a760e01b14905038610ea7565b635b5e139f60e01b81149150610ea0565b60005b838110610ee35750506000910152565b8181015183820152602001610ed3565b90602091610f0c81518092818552858086019101610ed0565b601f01601f1916010190565b600435906001600160a01b0382168203610f2e57565b600080fd5b602435906001600160a01b0382168203610f2e57565b6020810190811067ffffffffffffffff821117610f6557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610f6557604052565b67ffffffffffffffff8111610f6557601f01601f191660200190565b929192610fc582610f9d565b91610fd36040519384610f7b565b829481845281830111610f2e578281602093846000960137010152565b9080601f83011215610f2e5781602061100b93359101610fb9565b90565b6060906003190112610f2e576001600160a01b03906004358281168103610f2e57916024359081168103610f2e579060443590565b600b546001600160a01b0316330361105757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b031680156110bb57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b1561111957565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b031661100b811515611112565b90600182811c921680156111b1575b602083101461119b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611190565b60405190600082600c54916111cf83611181565b8083529260019081811690811561125757506001146111f8575b506111f692500383610f7b565b565b600c600090815291507fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c75b84831061123c57506111f69350508101602001386111e9565b81935090816020925483858a01015201910190918592611223565b9050602092506111f694915060ff191682840152151560051b820101386111e9565b60008181526002602052604090205461129c906001600160a01b03161515611112565b6000908152600460205260409020546001600160a01b031690565b156112be57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561137357565b60405162461bcd60e51b81528061138c60048201611319565b0390fd5b906001600160a01b0380806113a48461115e565b169316918383149384156113d7575b5083156113c1575b50505090565b6113cd91929350611279565b16143880806113bb565b909350600052600560205260406000208260005260205260ff6040600020541692386113b3565b1561140557565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b61147c916114658461115e565b6001600160a01b03938484169391851684146113fe565b83821693841561164e57839182611595575090506009549085600052600a60205281604060002055600160401b821015610f65576114e2926114c9876103308560018997016009556118d4565b828603611562575b506114db8661115e565b16146113fe565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081206bffffffffffffffffffffffff60a01b9081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b61156b9061109b565b604060008781526007602052818120838252602052888282205588815260086020522055386114d1565b8583036115a7575b506114e2926114c9565b6115b291925061109b565b600019810191908211611638576114e29284926000908882526020906008825260409182842054828103611601575b508a8452838381205586845260078152828420918452528120559261159d565b87855260078252838520838652825283852054888652600783528486208287528352808587205585526008825283852055386115e1565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b156117b1576116ed946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610ef3565b03926001600160a01b03165af1849181611771575b50611760575050503d600014611758573d61171c81610f9d565b9061172a6040519283610f7b565b81528091833d92013e5b805191826117555760405162461bcd60e51b81528061138c60048201611319565b01fd5b506060611734565b6001600160e01b0319161492509050565b9091508581813d83116117aa575b6117898183610f7b565b810103126105ee57516001600160e01b0319811681036105ee579038611702565b503d61177f565b5050915050600190565b9293600093909291803b1561183b579484916118159660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610ef3565b0393165af18491816117715750611760575050503d600014611758573d61171c81610f9d565b505050915050600190565b61184f8161109b565b82101561187b5760018060a01b0316600052600760205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b60095481101561190b5760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190600090565b634e487b7160e01b600052603260045260246000fd5b600081815260026020526040902054611944906001600160a01b03161515611112565b60008181526020906006825260409081812091805182938054948261196887611181565b91828252888201936001988a8a82169182600014611c0e575050600114611bd0575b5061199792500383610f7b565b61199f6111bb565b908151928315611bc4578051611ba0575050506000868152600260205260409020546119d691506001600160a01b03161515611112565b6119de6111bb565b805190939015611b8a5785869184977a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000009081811015611b7b575b50506d04ee2d6d415b85acef810000000080841015611b6d575b50662386f26fc1000080841015611b5e575b506305f5e10080841015611b4f575b5061271080841015611b40575b506064831015611b30575b600a80931015611b27575b90816021818a0199611a9a611a858c610f9d565b9b611a9289519d8e610f7b565b808d52610f9d565b8b8b019890601f1901368a37508a0101905b611af1575b5050505090611ae59461100b949392519583611ad68895518092888089019101610ed0565b84019151809386840190610ed0565b01038084520182610f7b565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215611b2257919082611aac565b611ab1565b80970196611a71565b9691606460029104920196611a66565b60049198930492019638611a5b565b60089198930492019638611a4e565b60109198930492019638611a3f565b879198930492019638611a2d565b94985088940492503880611a13565b5092509250505190611b9b82610f49565b815290565b9297509261100b969550611ae5919450611ad6889151988996888089019101610ed0565b97505050505050505090565b915050855282878087208888915b858310611bf557505061199793508201013861198a565b8091929450548385890101520191018890888693611bde565b60ff1916875261199795151560051b850101925038915061198a9050565b6000818152600260205260409020549192916001600160a01b031615611dbf5760009080825260209160068352604081209085519067ffffffffffffffff8211611dab57611c7a8354611181565b601f8111611d68575b508490601f8311600114611ce457907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7969783611cd9575b50508160011b916000199060031b1c19161790555b604051908152a1565b015190503880611cbb565b9196601f198816848452868420935b818110611d5157509160019391897ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7999a9410611d38575b505050811b019055611cd0565b015160001960f88460031b161c19169055388080611d2b565b929387600181928786015181550195019301611cf3565b838252858220601f840160051c810191878510611da1575b601f0160051c01905b818110611d965750611c83565b828155600101611d89565b9091508190611d80565b634e487b7160e01b81526041600452602490fd5b60405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b15611e2257565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b611e718133611390565b611e6757606460405162461bcd60e51b815260206004820152602060248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665646044820152fd5b67ffffffffffffffff8111610f655760051b6020019056fea26469706673582212208044a378f9201b6a4182f9d8c9d73f45bc5893800e00cf9ede679efc8b79584164736f6c63430008120033";

type ERC721TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Token__factory extends ContractFactory {
  constructor(...args: ERC721TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    baseUri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, baseUri, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    baseUri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, baseUri, overrides || {}) as Promise<
      ERC721Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Token__factory {
    return super.connect(runner) as ERC721Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenInterface {
    return new Interface(_abi) as ERC721TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Token {
    return new Contract(address, _abi, runner) as unknown as ERC721Token;
  }
}
