/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC1155Token,
  ERC1155TokenInterface,
} from "../../../../contracts/tokens/ERC1155.sol/ERC1155Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
    ],
    name: "SignerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyMintBatchSig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyMintSig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000291576200256d803803806200001d81620002ab565b9283398101604082820312620002915781516001600160401b0392908381116200029157810192601f9083828601121562000291578451928184116200027b57602093601f19966200007586898785011601620002ab565b9682885286838301011162000291579085929160005b82811062000296575050600090870183015201516001600160a01b03958682169591869003620002915781519283116200027b578291620000ce600254620002d1565b8581116200023d575b508591858411600114620001d25750600092620001c6575b50508160011b916000199060031b1c1916176002555b62000112600354620002d1565b90808211620001a2575b505050600060035560055460018060a01b0319903382821617600555833391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600754604051938116837fb0604c365feafa080c833b6f6814d321a7561528e696ac2a112c2a0231b0ed35600080a316176007556122459081620003288239f35b620001bd926003600052600020910160051c8101906200030e565b3880806200011c565b015190503880620000ef565b909216916002600052856000209260005b87828210620002265750509084600195949392106200020c575b505050811b0160025562000105565b015160001960f88460031b161c19169055388080620001fd565b6001859682939686015181550195019301620001e3565b6200026a906002600052876000208780870160051c8201928a881062000271575b0160051c01906200030e565b38620000d7565b925081926200025e565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8181018501518982018601528794016200008b565b6040519190601f01601f191682016001600160401b038111838210176200027b57604052565b90600182811c9216801562000303575b6020831014620002ed57565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002e1565b8181106200031a575050565b600081556001016200030e56fe6040608081526004908136101561001557600080fd5b600091823560e01c8062fdd58e146111fe57806301ffc9a7146111915780630e89341c1461115d5780631f7fdffa146110e3578063238ac933146110ba5780632d0335ab146110825780632eb2c2d614610dda5780634a9eee6914610d515780634e1273f414610bb557806355f804b314610a2d5780636c19e783146109c4578063715018a614610967578063731133e914610915578063862440e2146107575780638da5cb5b1461072e5780639262fa8514610666578063a22cb46514610589578063e985e9c514610537578063f0a641b3146104e0578063f242432a14610275578063f2fde38b146101aa5763fe9fd4081461011257600080fd5b346101a65760c03660031901126101a65761012b61122e565b6001600160401b03916024358381116101a25761014b9036908301611310565b9260443581811161019e576101639036908401611310565b9560a43591821161019b57509161018461019294926020979436910161136e565b926084359260643592612160565b90519015158152f35b80fd5b8680fd5b8580fd5b8280fd5b50346101a65760203660031901126101a6576101c461122e565b906101cd6113f8565b6001600160a01b03918216928315610223575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b5090346101a65760a03660031901126101a65761029061122e565b83610299611249565b91604435906064356084356001600160401b0381116104dc576102bf903690890161136e565b926001600160a01b039283169233841480156104bd575b6102df90611524565b8616906102ed821515611587565b6102f68161181c565b506103008361181c565b5080865260209686885288872085885288528389882054610323828210156115e1565b838952888a528a8920878a528a5203898820558187528688528887208388528852888720610352858254611640565b905582858a51848152868b8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b61038e578580f35b889587946103cf8a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a4830190611282565b03925af186918161048e575b5061045d5750506001906103ed61173b565b6308c379a01461042a575b5061040d5750505b3880808381808080808580f35b5162461bcd60e51b8152915081906104269082016117c7565b0390fd5b610432611759565b8061043d57506103f8565b6104268591855193849362461bcd60e51b85528401526024830190611282565b6001600160e01b031916039050610475575050610400565b5162461bcd60e51b8152915081906104269082016116f2565b6104af919250843d86116104b6575b6104a781836112d8565b8101906116d2565b90386103db565b503d61049d565b508386526001602090815288872033885290528786205460ff166102d6565b8480fd5b50346101a65760c03660031901126101a6576104fa61122e565b9260a435906001600160401b03821161019b5750926105216101929260209536910161136e565b9060843590606435906044359060243590611ebd565b50503461058557806003193601126105855760ff8160209361055761122e565b61055f611249565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b5090346101a657806003193601126101a6576105a361122e565b90602435918215158093036104dc576001600160a01b0316923384146106125750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b50919034610585576080366003190112610585576001600160401b03833581811161072a576106989036908601611310565b916024358281116104dc576106b09036908701611310565b916064359081116104dc576106cb6106e2913690880161136e565b338652600660205260443583872054858733612160565b1561071b57610718939450338552600660205280852061070281546114d5565b9055519161070f836112a7565b84835233611a55565b80f35b51638baa579f60e01b81528490fd5b8380fd5b50503461058557816003193601126105855760055490516001600160a01b039091168152602090f35b509190346105855780600319360112610585578235906001600160401b036024358181116104dc5761078c903690870161136e565b946107956113f8565b83855260209181835283862091875191821161090257506107b68254611c44565b601f81116108bf575b5082601f821160011461083b57819087987f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b979892610830575b50508160011b916000199060031b1c19161790555b61082a61081a85611c7e565b9251928284938452830190611282565b0390a280f35b0151905038806107f9565b82875283872097601f198316885b8181106108a85750917f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b9798999184600195941061088f575b505050811b01905561080e565b015160001960f88460031b161c19169055388080610882565b838301518b556001909a0199928601928601610849565b828752838720601f830160051c8101918584106108f8575b601f0160051c01905b8181106108ed57506107bf565b8781556001016108e0565b90915081906108d7565b634e487b7160e01b875260419052602486fd5b8382346105855760803660031901126105855761093061122e565b6064356001600160401b03811161072a57610718926109519136910161136e565b9061095a6113f8565b60443590602435906118a7565b833461019b578060031936011261019b576109806113f8565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b833461019b57602036600319011261019b576109de61122e565b6109e66113f8565b6007546001600160a01b03918216918116827fb0604c365feafa080c833b6f6814d321a7561528e696ac2a112c2a0231b0ed358580a36001600160a01b0319161760075580f35b50823461019b57602080600319360112610585576001600160401b03833581811161072a57610a5f903690860161136e565b93610a686113f8565b8451918211610ba25750600391610a7f8354611c44565b601f8111610b41575b5080601f8311600114610ac25750839482939492610ab7575b50508160011b9160001990841b1c191617905580f35b015190508480610aa1565b838552601f198316957fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b929186905b888210610b2957505083600195969710610b11575b505050811b01905580f35b015160001983861b60f8161c19169055848080610b06565b80600185968294968601518155019501930190610af1565b8385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191838510610b98575b601f0160051c01905b818110610b8d5750610a88565b858155600101610b80565b9091508190610b77565b634e487b7160e01b845260419052602483fd5b50346101a657816003193601126101a65780356001600160401b038082116104dc57366023830112156104dc578183013590610bf0826112f9565b92610bfd865194856112d8565b82845260209260248486019160051b83010191368311610d4d57602401905b828210610d2a575050506024359081116101a257610c3d9036908501611310565b928251845103610cd75750815194610c54866112f9565b95610c61865197886112d8565b808752610c70601f19916112f9565b0136838801375b8251811015610cc157610cbc90610cac6001600160a01b03610c9983876114fa565b5116610ca583886114fa565b5190611450565b610cb682896114fa565b526114d5565b610c77565b845182815280610cd3818501896113c4565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b0381168103610d49578152908401908401610c1c565b8980fd5b8880fd5b5091903461058557608036600319011261058557823590602435906064356001600160401b0381116104dc57610d8d610da4913690880161136e565b338652600660205260443583872054858733611ebd565b1561071b576107189394503385526006602052808520610dc481546114d5565b90555191610dd1836112a7565b848352336118a7565b50346101a6576003199160a03684011261072a57610df661122e565b92610dff611249565b936001600160401b039360443585811161107e57610e209036908301611310565b90606435868111610d4d57610e389036908301611310565b95608435908111610d4d57610e50903690830161136e565b936001600160a01b0393841693338514801561105f575b610e7090611524565b610e7d845189511461164d565b881694610e8b861515611587565b895b8a8551821015610f11579089610f058a610f0c94610eb685610eaf818d6114fa565b51956114fa565b51938082526020908282528383208d84528252858d8585205490610edc838310156115e1565b838652858552868620908652845203848420558252818152828220908d83525220918254611640565b90556114d5565b610e8d565b50509094939596929197848789517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610f4e8a8a836116aa565b0390a43b610f5a578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a48501610f8c916113c4565b82858203016064860152610f9f916113c4565b90838203016084840152610fb291611282565b0381885a94602095f185918161103f575b506110295750506001610fd461173b565b6308c379a014610ff2575b61040d5750505b38808080808080808880f35b610ffa611759565b806110055750610fdf565b905061042691602094505193849362461bcd60e51b85528401526024830190611282565b6001600160e01b03191603610475575050610fe6565b61105891925060203d81116104b6576104a781836112d8565b9038610fc3565b50848a5260016020908152878b20338c529052868a205460ff16610e67565b8780fd5b5050346105855760203660031901126105855760209181906001600160a01b036110aa61122e565b1681526006845220549051908152f35b50503461058557816003193601126105855760075490516001600160a01b039091168152602090f35b838234610585576080366003190112610585576110fe61122e565b6001600160401b036024358181116104dc5761111d9036908501611310565b6044358281116101a2576111349036908601611310565b916064359081116101a2576107189461114f9136910161136e565b926111586113f8565b611a55565b50913461019b57602036600319011261019b575061117e610cd39235611c7e565b9051918291602083526020830190611282565b50346101a65760203660031901126101a657359063ffffffff60e01b82168092036101a65760209250636cdb3d1360e11b82149182156111ed575b82156111dc575b50519015158152f35b6301ffc9a760e01b149150386111d3565b6303a24d0760e21b811492506111cc565b50503461058557806003193601126105855760209061122761121e61122e565b60243590611450565b9051908152f35b600435906001600160a01b038216820361124457565b600080fd5b602435906001600160a01b038216820361124457565b60005b8381106112725750506000910152565b8181015183820152602001611262565b9060209161129b8151809281855285808601910161125f565b601f01601f1916010190565b602081019081106001600160401b038211176112c257604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b038211176112c257604052565b6001600160401b0381116112c25760051b60200190565b81601f8201121561124457803591611327836112f9565b9261133560405194856112d8565b808452602092838086019260051b820101928311611244578301905b82821061135f575050505090565b81358152908301908301611351565b81601f82011215611244578035906001600160401b0382116112c257604051926113a2601f8401601f1916602001856112d8565b8284526020838301011161124457816000926020809301838601378301015290565b90815180825260208080930193019160005b8281106113e4575050505090565b8351855293810193928101926001016113d6565b6005546001600160a01b0316330361140c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b031690811561147d57600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b6064820152608490fd5b60001981146114e45760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561150e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b1561152b57565b60405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608490fd5b1561158e57565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156115e857565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b919082018092116114e457565b1561165457565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b90916116c16116cf936040845260408401906113c4565b9160208184039101526113c4565b90565b9081602091031261124457516001600160e01b0319811681036112445790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d1161174857565b905060046000803e60005160e01c90565b600060443d106116cf57604051600319913d83016004833e81516001600160401b03918282113d6024840111176117b6578184019485519384116117be573d850101602084870101116117b657506116cf929101602001906112d8565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60405190604082018281106001600160401b038211176112c2576040526001825260208201602036823782511561150e575290565b1561185857565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b9291906001600160a01b0384166118bf811515611851565b6118c88261181c565b506118d28361181c565b5060009282845260209484865260409687862084875287528786206118f8848254611640565b905583868951878152858a8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628b3392a43b61193a575b50505050505050565b61197c92869286895180968195829463f23a6e6160e01b9a8b85523360048601528560248601526044850152606484015260a0608484015260a4830190611282565b03925af1839181611a36575b50611a0657505060019161199a61173b565b6308c379a0146119d0575b50506119b957505b38808080808080611931565b5162461bcd60e51b815280610426600482016117c7565b6119d8611759565b91826119e457506119a5565b8461042691505192839262461bcd60e51b845260048401526024830190611282565b6001600160e01b031916039150611a1f905057506119ad565b5162461bcd60e51b815280610426600482016116f2565b611a4e919250853d87116104b6576104a781836112d8565b9038611988565b9290916001600160a01b03841691611a6e831515611851565b611a7b845183511461164d565b60005b8451811015611aca5780611a95611ac592856114fa565b51611aa082886114fa565b51600052610f0560206000815260409081600020908960005252600020918254611640565b611a7e565b509192938360006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611b03888c836116aa565b0390a43b611b12575b50505050565b611b75926020926000604051809681958294611b66611b5363bc197c8160e01b9c8d875233600488015287602488015260a0604488015260a48701906113c4565b60031993848783030160648801526113c4565b91848303016084850152611282565b03925af160009181611c24575b50611bfc5750506001611b9361173b565b6308c379a014611bc5575b611bac575b38808080611b0c565b60405162461bcd60e51b815280610426600482016117c7565b611bcd611759565b80611bd85750611b9e565b60405162461bcd60e51b815260206004820152908190610426906024830190611282565b6001600160e01b03191614611ba35760405162461bcd60e51b815280610426600482016116f2565b611c3d91925060203d81116104b6576104a781836112d8565b9038611b82565b90600182811c92168015611c74575b6020831014611c5e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c53565b600090815260209060048252604081209060405190809183549281611ca285611c44565b9182825287820196600196898882169182600014611e9f575050600114611e61575b50611cd1925003826112d8565b805115611da6576040519485938360035491611cec83611c44565b92818116908115611d855750600114611d25575b50505050611d166116cf9483925193849161125f565b0103601f1981018352826112d8565b909192969450600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838310611d6f575050506116cf94611d169185010192943880611d00565b8054898401890152889650918701918101611d51565b60ff191688860152505050801515028401019150611d166116cf3880611d00565b5060405160025490949350849282611dbd83611c44565b80865292828116908115611e3f5750600114611de3575b5050506116cf925003826112d8565b600281527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace95935091905b818310611e275750506116cf9350820101388080611dd4565b85548784018501529485019486945091830191611e0e565b925050506116cf94925060ff191682840152151560051b820101388080611dd4565b915050835281868085208686915b858310611e86575050611cd1935082010138611cc4565b8091929450548385880101520191018790868593611e6f565b60ff19168a52611cd195151560051b8501019250389150611cc49050565b939092949194814211611f6d5760405195602087019446865230604089015260018060a01b038097166060890152608088015260a087015260c086015260e085015260e084526101008401918483106001600160401b038411176112c257611f6294611f5a936040525190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612099565b929092611f7f565b806007541691161490565b60405163387b2e5560e11b8152600490fd5b60058110156120835780611f905750565b60018103611fdd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6002810361202a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461203357565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9060418151146000146120c7576120c3916020820151906060604084015193015160001a906120d1565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116121545791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156121475781516001600160a01b03811615612141579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b93949192854211611f6d576121db611f5a94611f62976040519384916121c46121b16020850198468a5230604087015260018060a01b03809d16606087015260e060808701526101008601906113c4565b601f1995868683030160a08701526113c4565b9160c084015260e0830152039081018352826112d8565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002061209956fea264697066735822122085bc110351d17fb52cdefca1b3e3826dab03a8b497ac11f2f1234eead936cf0d64736f6c63430008120033";

type ERC1155TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Token__factory extends ContractFactory {
  constructor(...args: ERC1155TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseUri: string,
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(baseUri, _signer, overrides || {});
  }
  override deploy(
    baseUri: string,
    _signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(baseUri, _signer, overrides || {}) as Promise<
      ERC1155Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Token__factory {
    return super.connect(runner) as ERC1155Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TokenInterface {
    return new Interface(_abi) as ERC1155TokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Token {
    return new Contract(address, _abi, runner) as unknown as ERC1155Token;
  }
}
